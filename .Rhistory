z   <- runif(500,0,1)
theta <- runif(500,0,360)
ycoor <- y * cos(theta)
zcoor <- z * sin(theta)
test <- cbind.data.frame(x,y,z, theta)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + stat_ellipse(type="euclid", level=1.01)
x <- 1:500
y   <- runif(500,0,1)
z   <- runif(500,0,1)
theta <- runif(500,0,360)
ycoor <- y * cos(theta)
zcoor <- z * sin(theta)
test <- cbind.data.frame(x,y,z, theta)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + stat_ellipse(type="euclid", level=1.01)
x <- 1:500
y   <- runif(500,0,1)
z   <- runif(500,0,1)
theta <- runif(500,0,360)
ycoor <- y * cos(theta)
zcoor <- z * sin(theta)
test <- cbind.data.frame(x,y,z, theta)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + stat_ellipse(type="euclid", level=1.01)
runApp()
runApp()
runApp()
runApp()
x <- 1:500
y   <- runif(500,0,1)
z   <- runif(500,0,1)
theta <- runif(500,0,360)
ycoor <- y * cos(theta)
zcoor <- z * sin(theta)
test <- cbind.data.frame(x,ycoor,zcoor, theta)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + stat_ellipse(type="euclid", level=1.01)
x <- 1:500
y   <- runif(500,0,1)
z   <- runif(500,0,1)
theta <- runif(500,0,360)
ycoor <- y * cos(theta)
zcoor <- z * sin(theta)
test <- cbind.data.frame(x,ycoor,zcoor, theta)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + stat_ellipse(type="euclid", level=1.01)
x <- 1:500
y   <- runif(500,0,1)
z   <- runif(500,0,1)
theta <- runif(500,0,360)
ycoor <- y * cos(theta)
zcoor <- z * sin(theta)
test <- cbind.data.frame(x,ycoor,zcoor, theta)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + stat_ellipse(type="euclid", level=1.01)
x <- 1:500
y   <- runif(500,0,1)
z   <- runif(500,0,1)
theta <- runif(500,0,360)
ycoor <- y * cos(theta)
zcoor <- z * sin(theta)
test <- cbind.data.frame(x,ycoor,zcoor, theta)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + stat_ellipse(type="euclid", level=1.01)
x <- 1:500
y   <- runif(500,0,1)
z   <- runif(500,0,1)
theta <- runif(500,0,360)
ycoor <- y * cos(theta)
zcoor <- z * sin(theta)
test <- cbind.data.frame(x,ycoor,zcoor, theta)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + stat_ellipse(type="euclid", level=1.01)
x <- 1:500
y   <- runif(500,0,1)
z   <- runif(500,0,1)
theta <- runif(500,0,360)
ycoor <- y * cos(theta)
zcoor <- z * sin(theta)
test <- cbind.data.frame(x,ycoor,zcoor, theta)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + stat_ellipse(type="euclid", level=1.01)
x <- 1:500
y   <- runif(500,0,1)
z   <- runif(500,0,1)
theta <- runif(500,0,360)
ycoor <- y * cos(theta)
zcoor <- z * sin(theta)
test <- cbind.data.frame(x,ycoor,zcoor, theta)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + stat_ellipse(type="euclid", level=1.01)
x <- 1:500
y   <- runif(500,0,1)
z   <- runif(500,0,1)
theta <- runif(500,0,360)
ycoor <- y * cos(theta)
zcoor <- z * sin(theta)
test <- cbind.data.frame(x,ycoor,zcoor, theta)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + stat_ellipse(type="euclid", level=1.01)
x <- 1:500
y   <- runif(500,0,1)
z   <- runif(500,0,1)
theta <- runif(500,0,360)
ycoor <- y * cos(theta)
zcoor <- z * sin(theta)
test <- cbind.data.frame(x,ycoor,zcoor, theta)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + stat_ellipse(type="euclid", level=1.01)
x <- 1:500
y   <- runif(500,0,1)
z   <- runif(500,0,1)
theta <- runif(500,0,360)
ycoor <- y * cos(theta)
zcoor <- z * sin(theta)
test <- cbind.data.frame(x,ycoor,zcoor, theta)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + stat_ellipse(type="euclid", level=1.01)
x <- 1:500
y   <- runif(500,0,1)
z   <- runif(500,0,1)
theta <- runif(500,0,360)
ycoor <- y * cos(theta)
zcoor <- z * sin(theta)
test <- cbind.data.frame(x,ycoor,zcoor, theta)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + stat_ellipse(type="euclid", level=1.01)
x <- 1:500
y   <- runif(500,0,1)
z   <- runif(500,0,1)
theta <- runif(500,0,360)
ycoor <- y * cos(theta)
zcoor <- z * sin(theta)
test <- cbind.data.frame(x,ycoor,zcoor, theta)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + stat_ellipse(type="euclid", level=1.01)
x <- 1:500
y   <- runif(500,0,1)
z   <- runif(500,0,1)
theta <- runif(500,0,360)
ycoor <- y * cos(theta)
zcoor <- z * sin(theta)
test <- cbind.data.frame(x,ycoor,zcoor, theta)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + stat_ellipse(type="euclid", level=1.01)
x <- 1:500
y   <- runif(500,0,1)
z   <- runif(500,0,1)
theta <- runif(500,0,360)
ycoor <- y * cos(theta)
zcoor <- z * sin(theta)
test <- cbind.data.frame(x,ycoor,zcoor, theta)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + stat_ellipse(type="euclid", level=1.01)
runApp()
runApp()
runApp()
qplot(1:10, 1:10, geom="blank") +   annotation_custom(grob=circleGrob(r=unit(1,"npc")), xmin=2, xmax=4, ymin=4, ymax=6)
library(grid)
qplot(1:10, 1:10, geom="blank") +   annotation_custom(grob=circleGrob(r=unit(1,"npc")), xmin=2, xmax=4, ymin=4, ymax=6)
qplot(-1:1, -1:1, geom="blank") +   annotation_custom(grob=circleGrob(r=unit(1,"npc")), xmin=2, xmax=4, ymin=4, ymax=6)
qplot(-1:1, -1:1, geom="blank") +   annotation_custom(grob=circleGrob(r=unit(1,"npc")), xmin=-1, xmax=1, ymin=-1, ymax=1)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + stat_ellipse(type="euclid", level=1.01) +   annotation_custom(grob=circleGrob(r=unit(1,"npc")), xmin=-1, xmax=1, ymin=-1, ymax=1)
angle <- seq(-pi, pi, length = 50)
df <- data.frame(x = sin(angle), y = cos(angle))
angle <- seq(-pi, pi, length = 50)
df <- data.frame(x = sin(angle), y = cos(angle))
qplot(x, y, data = df, geom = "polygon")
qplot(x, y, data = df, geom = "line")
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + stat_ellipse(type="euclid", level=1.01) + geom_polygon(aes(x, y), data = df, inherit.aes = F)
p + geom_point(size=4) + coord_fixed(ratio = 1) + stat_ellipse(type="euclid", level=1.01) + geom_point(aes(x, y), data = df, inherit.aes = F)
geom_pointrange()angle <- seq(-pi, pi, length = 50)
p + geom_point(size=4) + coord_fixed(ratio = 1) + stat_ellipse(type="euclid", level=1.01) + geom_line(aes(x, y), data = df, inherit.aes = F)
df <- order(data.frame(x = sin(angle), y = cos(angle)))
angle <- seq(-pi, pi, length = 50)
df <- order(data.frame(x = sin(angle), y = cos(angle)))
qplot(x, y, data = df, geom = "line")
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + stat_ellipse(type="euclid", level=1.01) + scale_x_continuous(limits = c(0,1)) +
scale_y_continuous(limits = c(0,1))+
geom_point(aes(x=x, y=y), data=dat, size=50, shape=1, color="gold4")
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + stat_ellipse(type="euclid", level=1.01) + scale_x_continuous(limits = c(0,1)) +
scale_y_continuous(limits = c(0,1))+
geom_point(aes(x=x, y=y), data=test, size=50, shape=1, color="gold4")
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + stat_ellipse(type="euclid", level=1.01) + scale_x_continuous(limits = c(0,1)) + scale_y_continuous(limits = c(0,1))+
geom_point(aes(x=y, y=z), data=test, size=50, shape=1, color="gold4")
## junk code
library(shiny)
runExample()
runExample("05_sliders")
x <- 1:500
y   <- runif(500,0,1)
z   <- runif(500,0,1)
theta <- runif(500,0,360)
ycoor <- y * cos(theta)
zcoor <- z * sin(theta)
test <- cbind.data.frame(x, y, z,ycoor,zcoor, theta)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + stat_ellipse(type="euclid", level=1.01)
x <- 1:500
y   <- runif(500,0,1)
z   <- runif(500,0,1)
theta <- runif(500,0,360)
ycoor <- y * cos(theta)
zcoor <- z * sin(theta)
test <- cbind.data.frame(x, y, z,ycoor,zcoor, theta)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + stat_ellipse(type="euclid", level=1.01)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + geom_circle(radius=1)
?geom_circle
??geom_circle
install.packages("geomnet")
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + geom_circle(radius=1)
library("geomnet", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + geom_circle(radius=1)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + geom_circle(0,0,radius=1)
library(ggplot2)
data(mpg)
ggplot(mpg, aes(displ, hwy)) + geom_circle(radius=0.1) + geom_point()
ggplot(mpg, aes(displ, hwy)) + geom_circle(linetype=2, radius=0.05, alpha=0.5)
ggplot(mpg, aes(displ, hwy)) + geom_circle(aes(linetype=factor(cyl)), radius=0.05, alpha=0.5)
origin <- cbind.data.frame(0,0)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + geom_circle(data=origin),radius=1)
p + geom_point(size=4) + coord_fixed(ratio = 1) + geom_circle(data=origin, radius=1)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + geom_circle(data=origin, radius=1)
View(origin)
?cbind.data.frame
library(ggplot2)
origin <- cbind.data.frame(x = 0, y= 0)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + geom_circle(data=origin, radius=1)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + geom_circle(data=origin, x=x, y=y radius=1)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + geom_circle(data=origin, x=x, y=y radius=1)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + geom_circle(data=origin, x=x, y=y, radius=1)
## junk code
library(shiny)
runExample()
runExample("05_sliders")
org <- rep(0,500)
org2 <- rep(0,500)
x <- 1:500
y   <- runif(500,0,1)
z   <- runif(500,0,1)
theta <- runif(500,0,360)
ycoor <- y * cos(theta)
zcoor <- z * sin(theta)
test <- cbind.data.frame(x, y, z,ycoor,zcoor, theta)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + geom_circle(x=org, y=org2, radius=1)
## junk code
library(shiny)
runExample()
runExample("05_sliders")
test$circ <- circleFun(c(1,-1),2.3,npoints = 100)
circleFun <- function(center = c(0,0),diameter = 1, npoints = 100){
r = diameter / 2
tt <- seq(0,2*pi,length.out = npoints)
xx <- center[1] + r * cos(tt)
yy <- center[2] + r * sin(tt)
return(data.frame(x = xx, y = yy))
}
x <- 1:500
y   <- runif(500,0,1)
z   <- runif(500,0,1)
theta <- runif(500,0,360)
ycoor <- y * cos(theta)
zcoor <- z * sin(theta)
test <- cbind.data.frame(x, y, z,ycoor,zcoor, theta)
test$cir <- circleFun(c(1,-1),2.3,npoints = 100)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + geom_circle(x=org, y=org2, radius=1)
## junk code
library(shiny)
runExample()
runExample("05_sliders")
library(shiny)
##runExample()
##runExample("05_sliders")
circleFun <- function(center = c(0,0),diameter = 1, npoints = 100){
r = diameter / 2
tt <- seq(0,2*pi,length.out = npoints)
xx <- center[1] + r * cos(tt)
yy <- center[2] + r * sin(tt)
return(data.frame(x = xx, y = yy))
}
x <- 1:500
y   <- runif(500,0,1)
z   <- runif(500,0,1)
theta <- runif(500,0,360)
ycoor <- y * cos(theta)
zcoor <- z * sin(theta)
test <- cbind.data.frame(x, y, z,ycoor,zcoor, theta)
test$cir <- circleFun(c(1,-1),2.3,npoints = 500)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + geom_circle(x=org, y=org2, radius=1)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + geom_circle(x=org, y=org2, radius=1) + geom_path()
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + geom_circle(x=org, y=org2, radius=1) + geom_path(x=cir$x, y=cir$y)
View(test)
p + geom_point(size=4) + coord_fixed(ratio = 1) + geom_circle(x=org, y=org2, radius=1) + geom_path(x=cir.x, y=cir.y)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + geom_circle(x=org, y=org2, radius=1) + geom_path(x=cir.x, y=cir.y)
summary.data.frame(test)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + geom_circle(x=org, y=org2, radius=1) + geom_path(cir.x, cir.y)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + geom_circle(x=org, y=org2, radius=1) + geom_path(cir.x cir.y)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + geom_circle(x=org, y=org2, radius=1) + geom_path(aes(cir.x, cir.y))
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + geom_circle(x=org, y=org2, radius=1) + geom_path(aes(cir.x, cir.y))
?geom_path
## junk code
library(shiny)
##runExample()
##runExample("05_sliders")
circleFun <- function(center = c(0,0),diameter = 1, npoints = 100){
r = diameter / 2
tt <- seq(0,2*pi,length.out = npoints)
xx <- center[1] + r * cos(tt)
yy <- center[2] + r * sin(tt)
return(data.frame(x = xx, y = yy))
}
x <- 1:500
y   <- runif(500,0,1)
z   <- runif(500,0,1)
theta <- runif(500,0,360)
ycoor <- y * cos(theta)
zcoor <- z * sin(theta)
cir <- circleFun(c(1,-1),2.3,npoints = 500)
test <- cbind.data.frame(x, y, z,ycoor,zcoor, theta, cir)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + geom_circle(x=org, y=org2, radius=1) + geom_path(aes(x, y))
View(test)
## junk code
library(shiny)
##runExample()
##runExample("05_sliders")
circleFun <- function(center = c(0,0),diameter = 1, npoints = 100){
r = diameter / 2
tt <- seq(0,2*pi,length.out = npoints)
xx <- center[1] + r * cos(tt)
yy <- center[2] + r * sin(tt)
return(data.frame(xx = xx, yy = yy))
}
x <- 1:500
y   <- runif(500,0,1)
z   <- runif(500,0,1)
theta <- runif(500,0,360)
ycoor <- y * cos(theta)
zcoor <- z * sin(theta)
cir <- circleFun(c(1,-1),2.3,npoints = 500)
test <- cbind.data.frame(x, y, z,ycoor,zcoor, theta, cir)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + geom_circle(x=org, y=org2, radius=1) + geom_path(aes(x, y))
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + geom_circle(x=org, y=org2, radius=1) + geom_path(aes(xx, yy))
## junk code
library(shiny)
##runExample()
##runExample("05_sliders")
circleFun <- function(center = c(0,0),diameter = 1, npoints = 100){
r = diameter / 2
tt <- seq(0,2*pi,length.out = npoints)
xx <- center[1] + r * cos(tt)
yy <- center[2] + r * sin(tt)
return(data.frame(xx = xx, yy = yy))
}
x <- 1:500
y   <- runif(500,0,1)
z   <- runif(500,0,1)
theta <- runif(500,0,360)
ycoor <- y * cos(theta)
zcoor <- z * sin(theta)
cir <- circleFun(c(0,0),2.3,npoints = 500)
test <- cbind.data.frame(x, y, z,ycoor,zcoor, theta, cir)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + geom_circle(x=org, y=org2, radius=1) + geom_path(aes(xx, yy))
##origin, diameter and points
## junk code
library(shiny)
##runExample()
##runExample("05_sliders")
circleFun <- function(center = c(0,0),diameter = 1, npoints = 100){
r = diameter / 2
tt <- seq(0,2*pi,length.out = npoints)
xx <- center[1] + r * cos(tt)
yy <- center[2] + r * sin(tt)
return(data.frame(xx = xx, yy = yy))
}
x <- 1:500
y   <- runif(500,0,1)
z   <- runif(500,0,1)
theta <- runif(500,0,360)
ycoor <- y * cos(theta)
zcoor <- z * sin(theta)
##origin, diameter and points
cir <- circleFun(c(0,0),2,npoints = 500)
test <- cbind.data.frame(x, y, z,ycoor,zcoor, theta, cir)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + geom_circle(x=org, y=org2, radius=1) + geom_path(aes(xx, yy))
runApp()
runApp()
runApp()
## junk code
library(shiny)
##runExample()
##runExample("05_sliders")
circleFun <- function(center = c(0,0),diameter = 1, npoints = 100){
r = diameter / 2
tt <- seq(0,2*pi,length.out = npoints)
xx <- center[1] + r * cos(tt)
yy <- center[2] + r * sin(tt)
return(data.frame(xx = xx, yy = yy))
}
x <- 1:500
y   <- runif(500,0,1)
z   <- runif(500,0,1)
theta <- runif(500,0,360)
ycoor <- y * cos(theta)
zcoor <- z * sin(theta)
##origin, diameter and points
cir <- circleFun(c(0,0),2,npoints = 500)
test <- cbind.data.frame(x, y, z,ycoor,zcoor, theta, cir)
p <- ggplot(subset(test), aes(ycoor,zcoor))
p + geom_point(size=4) + coord_fixed(ratio = 1) + geom_circle(x=org, y=org2, radius=1) + geom_path(aes(xx, yy))
p + geom_point(size=4) + coord_fixed(ratio = 1) + geom_path(aes(xx, yy))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
?fluidRow
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?wellPanel
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("DT")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
